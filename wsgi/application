#!/usr/bin/python
import os

virtenv = os.environ['APPDIR'] + '/virtenv/'
os.environ['PYTHON_EGG_CACHE'] = os.path.join(virtenv, 'lib/python2.6/site-packages')
virtualenv = os.path.join(virtenv, 'bin/activate_this.py')
try:
    execfile(virtualenv, dict(__file__=virtualenv))
except IOError:
    pass
#
# IMPORTANT: Put any additional includes below this line. If placed above this
# line, it's possible required libraries won't be in your searchable path
#
import web
import datetime
from pymongo import Connection


urls = (
  '/', 'index',
  '/post', 'post'
)

render = web.template.render(os.path.join(os.path.dirname(__file__), 'templates/'))

class index:
    def GET(self):
        name = 'Ben'
        return render.index(name = name)

class post:
    def GET(self):
        connection = Connection('127.5.244.1',27017)
        db = connection.blog
        post = {"author" : "Ben",
                "text" : "My first blog post!",
                "date" : datetime.datetime.utcnow()}
        posts = dp.Posts
        posts.inserts(post)
        return "Post inserted"


application = web.application(urls, globals()).wsgifunc()

#
# Below for testing only
#
if __name__ == '__main__':
    from wsgiref.simple_server import make_server
    httpd = make_server('localhost', 8051, application)
    # Wait for a single request, serve it and quit.
    httpd.handle_request()
